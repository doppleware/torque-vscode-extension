name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Setup Xvfb
        uses: coactions/setup-xvfb@v1

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        uses: coactions/setup-xvfb@v1
        with:
          run: npm test
        env:
          CI: true
          DISPLAY: ':99.0'

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run check-types

      - name: Build production
        run: npm run build:prod

      - name: Package extension
        run: npm run package

      - name: Upload VSIX
        uses: actions/upload-artifact@v4
        with:
          name: torque-extension
          path: '*.vsix'

  release:
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build and package
        run: |
          npm run build:prod
          npm run package

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: torque-extension

      - name: Get version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: Release v${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
          files: '*.vsix'
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Optional: Publish to VS Code Marketplace
  # Uncomment and configure when ready for marketplace publishing
  # publish-marketplace:
  #   needs: build-and-test
  #   runs-on: ubuntu-latest
  #   if: startsWith(github.ref, 'refs/tags/')
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '20.x'
  #         cache: 'npm'
  #
  #     - name: Install dependencies
  #       run: npm ci
  #
  #     - name: Build and package
  #       run: |
  #         npm run build:prod
  #         npm run package
  #
  #     - name: Publish to VS Code Marketplace
  #       run: npx vsce publish --pat ${{ secrets.VSCE_PAT }}
  #       env:
  #         VSCE_PAT: ${{ secrets.VSCE_PAT }}